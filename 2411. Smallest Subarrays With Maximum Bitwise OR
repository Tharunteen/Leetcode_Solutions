import java.util.*;

class Solution {
    public int[] smallestSubarrays(int[] nums) {
        int n = nums.length;
        int[] res = new int[n];
        int[] last = new int[32]; // Track last index where each bit is seen

        // Traverse from right to left
        for (int i = n - 1; i >= 0; --i) {
            // Update last seen bit positions
            for (int b = 0; b < 32; ++b) {
                if (((nums[i] >> b) & 1) == 1) {
                    last[b] = i;
                }
            }

            // Find farthest index among bits needed for max OR
            int farthest = i;
            for (int b = 0; b < 32; ++b) {
                farthest = Math.max(farthest, last[b]);
            }

            res[i] = farthest - i + 1;
        }

        return res;
    }
}
